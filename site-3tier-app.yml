- hosts: workstation
  gather_facts: true
  roles:
    - name: osp-facts
  tags:
    - osp

- hosts: tag_AnsibleGroup_bastions
  gather_facts: no
  vars:
    - ec2_dynamic_inventory: "Three tier inventory"
  tasks:
    - name: Associate AWS tags as children to bastions group
      command: |
        tower-cli group associate --group tag_AnsibleGroup_bastions --parent bastions --inventory "{{ec2_dynamic_inventory}}"
    - name: Associate AWS tags as children to frontends group
      command: |
        tower-cli group associate --group tag_AnsibleGroup_frontends --parent frontends --inventory "{{ec2_dynamic_inventory}}"
    - name: Associate AWS tags as children to apps group
      command: |
        tower-cli group associate --group tag_AnsibleGroup_apps --parent apps --inventory "{{ec2_dynamic_inventory}}"
    - name: Associate AWS tags as children to appdbs group
      command: |
        tower-cli group associate --group tag_AnsibleGroup_appdbs --parent appdbs --inventory "{{ec2_dynamic_inventory}}"
  tags:
    - prod

# Setup front-end load balancer tier
- name: setup load-balancer tier
  hosts: frontends
  become: yes
  roles:
    - {name: base-config, tags: base-config}
    - {name: lb-tier, tags: [lbs, haproxy]}

# Setup application servers tier
- name: setup app tier
  hosts: apps
  become: yes
  gather_facts: false
  roles:
    - {name: base-config, tags: base-config}
    - {name: app-tier, tags: [apps, tomcat]}

# Setup database tier
- name: setup database tier
  become: yes
  hosts: appdbs
  roles:
    - {name: base-config, tags: base-config}
    - {name: db-tier, tags: [dbs, postgres]}
